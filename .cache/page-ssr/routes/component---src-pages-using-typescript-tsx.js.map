{"version":3,"file":"component---src-pages-using-typescript-tsx.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <Seo title=\"Using TypeScript\" />\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n"],"names":["React","Link","Layout","Seo","UsingTypescript","data","path","location","site","buildTime","query","title","children","rootPath","__PATH_PREFIX__","isRootPath","pathname","header","Date","getFullYear","PropTypes","Helmet","description","lang","meta","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","concat","defaultProps","propTypes","string","arrayOf","object","isRequired"],"sourceRoot":""}